# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: temurin
          cache: maven
      - name: Create testoutput directory
        run: mkdir -p /home/runner/work/autdemo/autdemo/target
      - name: install maven
        run: mvn test -Dcucumber.filter.tags="@regression"
        

      - name: Upload HTML report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-output
          path: ./target
          
      - name: Get Jira-xray api token
        id: xray-auth
        run: |
            TOKEN=$(curl -X POST -H "Content-Type: application/json" \
            -d '{"client_id":"${{ secrets.XRAY_CLIENT_ID }}","client_secret":"${{ secrets.XRAY_CLIENT_SECRET }}"}' \
            "${{ secrets.JIRA_TEST_URL }}/api/v2/authenticate")
            echo "XRAY_TOKEN=(echo $TOKEN | tr -d '"')" >> $GITHUB_ENV

      - name: Upload Test Results to Xray
        run: |
          curl -H  "Content-Type: multipart/form-data" \
               -H "Authorization: Bearer $XRAY_TOKEN" \
               -H "file=./target/surefire-reports/testng-results.xml" \
               "${{ secrets.JIRA_TEST_URL }}/rest/raven/2.0/api/import/execution/junit"
          
           
            
      
  
